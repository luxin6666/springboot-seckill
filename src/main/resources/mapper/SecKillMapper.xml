<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hzit.dao.SecKillMapper" >
  <resultMap id="BaseResultMap" type="com.hzit.pojo.SecKill" >
    <id column="ms_id" property="msId" jdbcType="INTEGER" />
    <result column="good_id" property="goodId" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ms_id, good_id, count, price, start_time, end_time, status
  </sql>
  <!--查询所有已结束的活动-->
  <select id="selectByEnd" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>from  t_ms where now() > end_time and status = 1
  </select>
  <!--查询所有要开始的活动，但未开始的活动-->
  <select id="selectByUnStarted" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from t_ms where now() between start_time and end_time and status = 0
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_ms
    where ms_id = #{msId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_ms
    where ms_id = #{msId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hzit.pojo.SecKill" >
    insert into t_ms (ms_id, good_id, count,
      price, start_time, end_time,
      status)
    values (#{msId,jdbcType=INTEGER}, #{goodId,jdbcType=INTEGER}, #{count,jdbcType=INTEGER},
      #{price,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hzit.pojo.SecKill" >
    insert into t_ms
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="msId != null" >
        ms_id,
      </if>
      <if test="goodId != null" >
        good_id,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="msId != null" >
        #{msId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null" >
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hzit.pojo.SecKill" >
    update t_ms
    <set >
      <if test="goodId != null" >
        good_id = #{goodId,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where ms_id = #{msId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hzit.pojo.SecKill" >
    update t_ms
    set good_id = #{goodId,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where ms_id = #{msId,jdbcType=INTEGER}
  </update>
</mapper>